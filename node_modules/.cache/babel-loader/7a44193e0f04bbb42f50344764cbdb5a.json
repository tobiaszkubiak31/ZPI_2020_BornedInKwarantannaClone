{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\larison101\\\\Desktop\\\\ZPI_2020_BornedInKwarantanna\\\\src\\\\components\\\\PrototypeComponenet.js\";\nimport React from 'react';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport FormControl from '@material-ui/core/FormControl';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Select from '@material-ui/core/Select';\nimport Grid from '@material-ui/core/Grid';\nexport default class PrototypeComponent extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      chosenState: \"Alaska\",\n      chosenProduct: \"Onion\",\n      inputField: 0.00,\n      errorMessage: \"\",\n      answer: \"\"\n    };\n\n    this.onChangeState = e => {\n      this.setState({\n        chosenState: e.target.value\n      });\n    };\n\n    this.onChangeProduct = e => {\n      this.setState({\n        chosenProduct: e.target.value\n      });\n    };\n\n    this.onChangeInputField = e => {\n      this.setState({\n        inputField: e.target.value\n      });\n    };\n\n    this.onButtonClick = e => {\n      if (this.validate()) {\n        // UZUPELNIC!!!\n        // tutaj obliczenie wartosci w zaleznosci od wybranego stanu, produktu i ceny\n        // i wpisanie wyniku do zmiennej answer, this.setState({answer: xD})\n        this.setState({\n          errorMessage: \"\"\n        });\n      } else {\n        //validacja sie nie powiodla\n        //aktualizacja stanu zmiennej na informujaca o bledzie\n        this.setState({\n          errorMessage: \"Niepoprawne dane wejsciowe!\"\n        });\n      }\n    };\n  }\n\n  validate() {\n    let prize = parseFloat(this.state.inputField);\n    let isValid = false;\n\n    if (!isNaN(prize) && prize > 0) {\n      isValid = true;\n    }\n\n    return isValid;\n  }\n\n  render() {\n    return (\n      /*#__PURE__*/\n      //Container to nasz glowny pojemnik\n      React.createElement(Container, {\n        component: \"main\",\n        fixed: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Typography, {\n        component: \"h1\",\n        variant: \"h5\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }\n      }, \"Prototyp aplikacji 1.0\"), /*#__PURE__*/React.createElement(\"form\", {\n        noValidate: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Grid, {\n        container: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        xs: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(FormControl, {\n        variant: \"outlined\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(InputLabel, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 37\n        }\n      }, \"State\"), /*#__PURE__*/React.createElement(Select, {\n        native: true,\n        value: this.chosenState,\n        onChange: this.onChangeState,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"option\", {\n        \"aria-label\": \"None\",\n        value: \"\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 37\n        }\n      }), /*#__PURE__*/React.createElement(\"option\", {\n        value: 'Alaska',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 37\n        }\n      }, \"Alaska\"), /*#__PURE__*/React.createElement(\"option\", {\n        value: 'Kansas',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 37\n        }\n      }, \"Kansas\"), /*#__PURE__*/React.createElement(\"option\", {\n        value: 'Mississippi',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 37\n        }\n      }, \"Mississippi\")))), /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        xs: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(FormControl, {\n        variant: \"outlined\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(InputLabel, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 37\n        }\n      }, \"State\"), /*#__PURE__*/React.createElement(Select, {\n        native: true,\n        value: this.chosenProduct,\n        onChange: this.onChangeProduct,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"option\", {\n        \"aria-label\": \"None\",\n        value: \"\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 37\n        }\n      }), /*#__PURE__*/React.createElement(\"option\", {\n        value: 'Onion',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 37\n        }\n      }, \"Onion\"), /*#__PURE__*/React.createElement(\"option\", {\n        value: 'Apple',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 37\n        }\n      }, \"Apple\"), /*#__PURE__*/React.createElement(\"option\", {\n        value: 'Potato',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 37\n        }\n      }, \"Potato\")))), /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        xs: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 29\n        }\n      }), /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        xs: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(TextField, {\n        variant: \"outlined\",\n        margin: \"normal\",\n        id: \"text\",\n        label: \"input\",\n        name: \"text\",\n        value: this.inputField,\n        onChange: this.onChangeInputField,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 33\n        }\n      })), /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        xs: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: this.onButtonClick,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 33\n        }\n      }, \"Oblicz\")))), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 21\n        }\n      }, \"Zmienna answer\"), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 21\n        }\n      }, this.state.errorMessage)))\n    );\n  }\n\n}","map":{"version":3,"sources":["C:/Users/larison101/Desktop/ZPI_2020_BornedInKwarantanna/src/components/PrototypeComponenet.js"],"names":["React","Button","TextField","Typography","Container","FormControl","InputLabel","Select","Grid","PrototypeComponent","Component","state","chosenState","chosenProduct","inputField","errorMessage","answer","onChangeState","e","setState","target","value","onChangeProduct","onChangeInputField","onButtonClick","validate","prize","parseFloat","isValid","isNaN","render"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Container from '@material-ui/core/Container';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport Select from '@material-ui/core/Select';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nexport default class PrototypeComponent extends React.Component {\r\n\r\n    state = {\r\n        chosenState: \"Alaska\",\r\n        chosenProduct: \"Onion\",\r\n        inputField: 0.00,\r\n        errorMessage: \"\",\r\n        answer: \"\"\r\n    }\r\n\r\n    onChangeState = e => {\r\n        this.setState({ chosenState: e.target.value})\r\n    }\r\n\r\n    onChangeProduct = e => {\r\n        this.setState({ chosenProduct: e.target.value})\r\n    }\r\n\r\n    onChangeInputField = e => {\r\n        this.setState({ inputField: e.target.value})\r\n    }\r\n\r\n    onButtonClick = e => {\r\n        if(this.validate()) {\r\n            // UZUPELNIC!!!\r\n            // tutaj obliczenie wartosci w zaleznosci od wybranego stanu, produktu i ceny\r\n            // i wpisanie wyniku do zmiennej answer, this.setState({answer: xD})\r\n            this.setState({errorMessage: \"\"})\r\n        } else {\r\n            //validacja sie nie powiodla\r\n            //aktualizacja stanu zmiennej na informujaca o bledzie\r\n            this.setState({errorMessage: \"Niepoprawne dane wejsciowe!\"})\r\n        }\r\n    }\r\n\r\n    validate() {\r\n        let prize = parseFloat(this.state.inputField)\r\n        let isValid = false\r\n\r\n        if(!isNaN(prize) && prize > 0)\r\n        {\r\n            isValid = true\r\n        }\r\n\r\n        return isValid\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            //Container to nasz glowny pojemnik\r\n            <Container component=\"main\" fixed>\r\n                <div>\r\n                    {/*To jest jakiś tytuł.*/}\r\n                    <Typography component=\"h1\" variant=\"h5\">\r\n                        Prototyp aplikacji 1.0\r\n                    </Typography>\r\n\r\n                    {/*Nasz formularz*/}\r\n                    <form noValidate>\r\n                        {/*Grid pozwala umiescic elementy obok siebie.*/}\r\n                        <Grid container>\r\n\r\n                            <Grid item xs>\r\n                                <FormControl variant=\"outlined\" >\r\n                                    <InputLabel>State</InputLabel>\r\n                                    <Select\r\n                                        native\r\n                                        value={this.chosenState}\r\n                                        onChange={this.onChangeState}\r\n                                    >\r\n                                    <option aria-label=\"None\" value=\"\" />\r\n                                    <option value={'Alaska'}>Alaska</option>\r\n                                    <option value={'Kansas'}>Kansas</option>\r\n                                    <option value={'Mississippi'}>Mississippi</option>\r\n                                    </Select>\r\n                                </FormControl>\r\n                            </Grid>\r\n\r\n                            <Grid item xs>\r\n                                <FormControl variant=\"outlined\" >\r\n                                    <InputLabel>State</InputLabel>\r\n                                    <Select\r\n                                        native\r\n                                        value={this.chosenProduct}\r\n                                        onChange={this.onChangeProduct}\r\n                                    >\r\n                                    <option aria-label=\"None\" value=\"\" />\r\n                                    <option value={'Onion'}>Onion</option>\r\n                                    <option value={'Apple'}>Apple</option>\r\n                                    <option value={'Potato'}>Potato</option>\r\n                                    </Select>\r\n                                </FormControl>\r\n                            </Grid>\r\n\r\n\r\n                            <Grid item xs>\r\n                                {/*Proponowane przeze mnie miejsce na rozwijane menu wyboru produktu.*/}\r\n                            </Grid>\r\n\r\n                            <Grid item xs>\r\n                                {/*Proponowane przeze mnie miejsce do wpisywania ceny.*/}\r\n                                <TextField\r\n                                    variant=\"outlined\"\r\n                                    margin=\"normal\"\r\n                                    id=\"text\"\r\n                                    label=\"input\"\r\n                                    name=\"text\"\r\n                                    value={this.inputField}\r\n                                    onChange={this.onChangeInputField}\r\n                                />\r\n                            </Grid>\r\n\r\n                            <Grid item xs>\r\n                                <Button\r\n                                    variant=\"contained\"   \r\n                                    color=\"primary\" \r\n                                    onClick={this.onButtonClick}\r\n                                >\r\n                                    Oblicz\r\n                                </Button>\r\n                            </Grid>\r\n\r\n                        </Grid>\r\n                    </form>\r\n\r\n                    {/*Proponowane przeze mnie miejsce na odpowiedź.*/}\r\n                    <p>Zmienna answer</p>\r\n                    <p>{this.state.errorMessage}</p>\r\n                </div>\r\n            </Container>\r\n        )\r\n    }\r\n\r\n}"]},"metadata":{},"sourceType":"module"}